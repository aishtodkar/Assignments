===================  OPERATORS ========================

Evaluate the expression in a step by step way based on operator precedence and associativity

1) printf("%d\n",1==5==5);
Ans: 0
used to check if its left-hand side operand is equal to right-hand side operand. Since 1 is not equal to 5, so the condition became false and thus printed 0
2) int i =0;
   printf("%d %d",i,i++);
Ans: 1 0

3) int x=5;
   printf("%d %d %d\n",x++,x++,x++);
Ans: 7 6 5

4) int x=2;
   printf("%d   ",++x++);	//increament operators cannot be used with constants and expressions
   printf("%d\n",x++);
Ans: Error	 

5) int k=1;
   printf("%d==1 is ""%s\n",k,k==1?"TRUE":"FALSE");
Ans: 1==1 is True 

6) int i=5;
   i=i++ - --i + ++i;
Ans: 6
Eplanation: i++= first assign and then increament	--i=first decreament and then assign
	i=5-5+6
	
7) int a=7;
   a+=a+=a-=6;
   printf("%d\n",a);
Ans: 4
Explanation:a+=a+=(a=7-6)
a+=(a+=1)		a+=(a=a+1)
a+=2		a=2+2=4 

8) int x=10,y=5,p,q;
   p=x>9;
   q=p||(x=5,y=10);
   printf("%d %d %d\n",q,x,y);
Ans:  1 10 5

9) int x=2,y=1;
   y+=x<<=2;
   printf("%d %d\n",x,y);
Ans: 8 9
Explanation:
y+=(x=x<<2)	//x<<2=x * 2^2=2*4=8
y=y+8	y=9

10) int x=2,y=4,z;
    z=y++*x++|y--;
    printf("%d\n",z);
Ans: 

11) int a=5,b=6,c=7,d;
    d=a&=b&=c&&a;
    printf("%d\n",d);
Ans: 0
Explanation:	d=a&=b&=(7&&5)
d=a&=b=(b&1)	b=0110&0001=0000
d=(a&0)		d=0101&0000=0000

12) int i=10;
    i=(10<10)?(10>=10)?(10<=10)?1:2:3:4;
    printf("%d\n",i);
Ans: 4
    i=(10<10)?(10>=10)?[(10<=10)?1:2]:3:4	//True
    i=(10<10)?{(10>=10)?1:3}:4		//True
    i=(10<10)?1:4		//False
    i=4

13) int a=10,b=20;			
    a=(a>5||b=6?40:50);
    printf("%d\n",a);
Ans: Comilation time Error
Explanation:  a=(a>5)||b=6?40:50	
	a=(1||20)=6?40:50
	a=(1=6?40:50)	//Error: on left side of assignment operator should not be constant value	
 
14) printf("%x\n",-1>>4);
    printf("%x\n",-1<<4);
Ans:  ff f0
-1= 1111 1111=All one's
1111 1111>>4=FF>>4	//because of sign bit copy mechanism 
FF<<4=FF/(2^4)=ff/16=f0

15) int x=7;
    x=(x<<=x%2);
    printf("%d\n",x);
Ans: 14
Expalanation:	x=(x<<=1)		7*(2^1)
		x=14

16) int a=2,b=5,c=1;
    printf("%d\n",(b>=a>=c?1:0));
Ans:1

17) int a=5;
    a=a-~a +1;
    printf("%d\n",a);
Ans: 12
Explanation: a=a-(~a)+1	a=0000 0101	~a=1111 1010=-6
	a=(5-(-6))+1=11+1=12

18) a=b=c=1;
    x=--a||++b*(3-1)/2&&b*(--c/3);
    printf("%d\n",x);
Ans: 0
Explanation:	x=(0||2)*(3-1)/2&&b*(--c/3)
	x=(2*2)/2&&b*(--c/3)
	x=4/2&&

19) a=10
    b = -5
    c = 2.5
    printf("%d %d",sizeof(a) + sizeof((++b) *c, b);
Ans:

20) int i=5;
    i=i++ - i
    printf("%d",i)
Ans: -1
Explanation:   i++= first assign then increament	i=5-6

========================================= PREPROCESSORS AND MACROS ===========================

1) What will be the output of the C program?
#include<stdio.h>
#define CONDITION(i)\
printf("preprocessor works\n");                         
int main()
{
	CONDITION(0);
	return 0;
}
Output:
preprocessor works
Condition statement treated as function with argument.

2) What will be the output of the C program?
#include<stdio.h>
# define loop while(true)
int main()
{
	loop;  
	printf("preprocessor-aptitude");
	return 0;
}
Output:
Error 
true is undefined

3) What will be the output of the C program?
#include<stdio.h>
# define x --5
int main()
{
	printf("%d",x);
	return 0;
}
Output:Error

4) What will be the output of the C program ?
#include<stdio.h>
#define sqr(x) ++x * ++x
int main()
{
	int a = 3, z;
	z = ++a * ++a;     
	a -= 3;
	printf("%d %d", sqr(a), z);
	return 0;
}
Output:16 25
Explanation:  z=5*5=25	//increament and then assign values
	a=a-3=5-3=2
	sqr(2)=4*4=16	//increament and then assign


5) What will be the output of the C program?
#include<stdio.h>                      
#define x 1+2
int main()
{
	int i;
	i = x * x * x;
	printf("%d",i);
}
Output: 7
Explanation: i=1+2*1+2*1+2
	=1+2+2+2=7

6) What will be the output of the C program?
#include<stdio.h>
#define a =
int main()
{
	int num a 6;
	printf("%d",num);
	return 0;
}
Output: 6

7) What will be the output of the C program?
#include<stdio.h>
#define fun(x,y) x*y
int main()
{
	int x = 2, y = 1;
	printf("%d",fun(x + 2, y - 1));
	return 0;
}
Output: 3
Ex: 	2+2*1-1=2+2-1=3

8) What will be the output of the C program?
#include<stdio.h>
int main()
{
	char DATE[15] = "Current Date";
	printf("%s\n", __DATE__ );
	return 0;
}
Output:	prints today date.

9) What will be the output of the C program?
#include<stdio.h>
int main()
{
	char TIME[15] = "Current Time";
	printf("%s\n",__TIME__);
	return 0;
}
Output: prints current time

10) What will be the output of the C program?
#include<stdio.h>
int main()
{	
	printf("Line :%d\n", __LINE__ );		//line number of this line
	return 0;
}
Output: prints the line number

11) What will be the output of the C program?
#include<stdio.h>
#define  preprocessor_works(x, y)  \
	printf(#x " and " #y " are great!\n")
int main(void) {
	preprocessor_works(you, me);
	return 0;
}
Output: you ans me are great!	//#replaces x and y with actual arguments

12) What will be the output of the C program?
#include<stdio.h>
# define puts  "%s C preprocessor"
int main()
{
	printf(puts, puts);
	return 0;
}
Output: %s C preprocessor C preprocessor

13) What will be the output of the C program?
#include<stdio.h>
#define preprocessor(n) printf ("macro" #n " = %d", macro##n)
int main(void) {
	int macro25 = 47;
	preprocessor(25);
	return 0;
}
Output: macro25=47		//##=concat macro and n	//# for replacing variable with its actual argument

14) What will be the output of the C program?
#include<stdio.h>
#include<string.h>
#define MACRO(num) ++num 
int main()
{
	char *ptr = "preprocessor";
	int num =strlen(ptr);
	printf("%s  ", MACRO(ptr));
	printf("%d", MACRO(num));
	return 0;
}
Output: reprocessor 13

15) What will be the output of the C program?
#include<stdio.h>
#define i 10
int main()
{
	#define i 20
	printf("%d",i);
	return 0;
}
Output: 20		//with warning of redefination of i		

16) What will be the output of the C program?
#include<stdio.h>
#define clrscr() 50
int main()
{
	clrscr();
	printf("%d\n",clrscr());
	return 0;
}
Output: 50

17) What will be the output of the C program?
#include<stdio.h>
#define int char
main()
{
	int i=5;
	printf ("sizeof (i) =%d", sizeof (i));
}
Output: 1	//as int replaced by char
